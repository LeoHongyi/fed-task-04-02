{"version":3,"sources":["AppleItem.js","App.js","reportWebVitals.js","stores/Apple.js","index.js"],"names":["AppleItem","observer","this","props","apple","eatApple","className","src","process","alt","id","weight","onClick","React","Component","App","inject","res","store","apples","forEach","isEaten","push","length","status","isPicking","buttonText","pickApple","curApple","notEatenQuantity","quantity","notEatenWeight","eatenApple","EatenQuantity","EatenWeight","getAppleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","bound","selector","setTimeout","Math","floor","random","newAppleId","appleId","targetIndex","index","observable","computed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb262923.chunk.js","sourcesContent":["import React from 'react'\r\nimport { observer } from 'mobx-react'\r\n\r\n@observer\r\nclass AppleItem extends React.Component {\r\n    render() {\r\n        const { apple, eatApple } = this.props\r\n        return (\r\n            <div className=\"appleItem\">\r\n                <div className=\"apple\"><img src={`${process.env.PUBLIC_URL}/assets/images/apple.png`} alt=\"\" /></div>\r\n                <div className=\"info\">\r\n                    <div className=\"name\">红苹果 - {apple.id}号</div>\r\n                    <div className=\"weight\">{apple.weight}克</div>\r\n                </div>\r\n                <div className=\"btn-div\">\r\n                    <button onClick={() => eatApple(apple.id)}>吃掉</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppleItem","import React from 'react'\nimport './App.css'\nimport AppleItem from './AppleItem'\nimport { inject, observer } from 'mobx-react'\n\n@inject('store')\n@observer\nclass App extends React.Component {\n  //unEaten apple\n  getAppleItem() {\n    let res = []\n\n    this.props.store.apples.forEach(apple => {\n      if (!apple.isEaten) {\n        res.push(\n          <AppleItem apple={apple} eatApple={this.props.store.eatApple} key={apple.id} />\n        )\n      }\n\n      if (!res.length || res.length === 0) {\n        res.push(\n          <div className=\"empty-tip\" key=\"empty\">\n            苹果篮子啥也没有\n          </div>\n        )\n      }\n    })\n\n    return res\n  }\n\n\n  render() {\n    let { status, isPicking, buttonText, pickApple } = this.props.store\n    let {\n      curApple: { quantity: notEatenQuantity, weight: notEatenWeight },\n      eatenApple: { quantity: EatenQuantity, weight: EatenWeight },\n    } = status\n    return (\n      <div className=\"appleBasket\">\n        <div className=\"title\">苹果篮子</div>\n        <div className=\"stats\">\n          <div className=\"section\">\n            <div className=\"head\">当前</div>\n            <div className=\"content\">{notEatenQuantity}个苹果，{notEatenWeight}克\n            </div>\n          </div>\n          <div className=\"section\">\n            <div className=\"head\">已吃掉</div>\n            <div className=\"content\">{EatenQuantity}个苹果，{EatenWeight}克</div>\n          </div>\n          <div className=\"appleList\">\n            {this.getAppleItem()}\n          </div>\n          <div className=\"btn-div\">\n            <button className={isPicking ? 'disabled' : ''} onClick={() => pickApple()}>{buttonText}</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport { observable, computed, action, runInAction } from 'mobx'\r\nclass AppleStore {\r\n    @observable apples = []\r\n    @observable newAppleId = 3\r\n    @observable isPicking = false\r\n    @observable buttonText = '摘苹果'\r\n\r\n    @computed get status() {\r\n        let status = {\r\n            curApple: {\r\n                quantity: 0,\r\n                weight: 0\r\n            },\r\n            eatenApple: {\r\n                quantity: 0,\r\n                weight: 0\r\n            }\r\n        }\r\n\r\n        this.apples.forEach(apple => {\r\n            let selector = apple.isEaten ? 'eatenApple' : 'curApple'\r\n            status[selector].quantity++\r\n            status[selector].weight += apple.weight\r\n        })\r\n\r\n        return status\r\n    }\r\n\r\n    @action.bound pickApple() {\r\n        if (this.isPicking) {\r\n            return false\r\n        }\r\n\r\n        this.isPicking = true\r\n        this.buttonText = '正在采摘...'\r\n\r\n        setTimeout(() => {\r\n            let weight = Math.floor(200 + Math.random() * 50)\r\n            this.isPicking = false\r\n            this.buttonText = '摘苹果'\r\n            this.apples.push({\r\n                id: this.newAppleId++,\r\n                weight,\r\n                isEaten: false\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    @action.bound eatApple(appleId) {\r\n        let targetIndex = ''\r\n        this.apples.forEach((apple, index) => {\r\n            if (apple.id === appleId) {\r\n                targetIndex = index\r\n            }\r\n        })\r\n        this.apples[targetIndex].isEaten = true\r\n    }\r\n}\r\n\r\nconst apples = new AppleStore()\r\nexport default apples","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react'\nimport reportWebVitals from './reportWebVitals';\nimport apples from './stores/Apple'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={apples}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}